{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Chanjo Coverage analysis for clinical sequencing Current release : Optimistic Otter (4.0) The goals of Chanjo are quite simple: Integrate seamlessly with sambamba depth region output Break down coverage to intuitive levels of abstraction: exons, transcripts, and genes Enable exploratory coverage investigations across samples and genomic regions $ sambamba depth region -L exons.bed -t 10 -t 20 alignment.bam > exons.coverage.bed $ chanjo load exons.coverage.bed $ chanjo calculate gene ADK {\"completeness_10\": 100, \"completeness_20\": 87.123, \"mean_coverage\": 47.24234} To learn more about Chanjo and how you can use it to gain a better understanding of sequencing coverage you can do no better than to: Check out the demo!","title":"Introduction"},{"location":"#chanjo","text":"","title":"Chanjo"},{"location":"#coverage-analysis-for-clinical-sequencing","text":"Current release : Optimistic Otter (4.0) The goals of Chanjo are quite simple: Integrate seamlessly with sambamba depth region output Break down coverage to intuitive levels of abstraction: exons, transcripts, and genes Enable exploratory coverage investigations across samples and genomic regions $ sambamba depth region -L exons.bed -t 10 -t 20 alignment.bam > exons.coverage.bed $ chanjo load exons.coverage.bed $ chanjo calculate gene ADK {\"completeness_10\": 100, \"completeness_20\": 87.123, \"mean_coverage\": 47.24234} To learn more about Chanjo and how you can use it to gain a better understanding of sequencing coverage you can do no better than to: Check out the demo!","title":"Coverage analysis for clinical sequencing"},{"location":"topics/demo/","text":"Demo Chanjo comes bundled with a set of demo files that let's you familiarize yourself with the command line interface. This guide assumed you've followed the installation guide . Demo files First we need some files to work with. Chanjo comes with some pre-installed demo files we can use: $ chanjo init --demo ./chanjo-demo This will create a new folder ( ./chanjo-demo ) in your current working directory and fill it with example files. You can name the new folder anything you like but it must not already exist! Configuration Chanjo went ahead and pre-filled a config-file for you under: ./chanjo-demo/chanjo.yaml . For now it just references the SQLite database we will use. But since Chanjo will look for this file in the current working directory when you run the command we don't need to reference the database every time. You can optionally point to a config file in a different location by using the --config flag like: chanjo --config /path/to/chanjo.yaml . Linking exons/transcripts/genes Chanjo doesn't subscribe to any particular definition of exons/transcripts etc. You can take a look at the how exons/transcripts/genes are linked in: hgnc.min.bed . Let's tell Chanjo which transcripts belong to which genes. You only need to run this command once. $ cd chanjo-demo $ chanjo link ./hgnc.min.bed Loading annotations After running sambamba depth region for a BED-file you can take the output and load it into the database. Let's also add a group identifier to indicate that the sample are related. $ for file in *.coverage.bed; do echo \"${file}\"; chanjo load --group group1 \"${file}\"; done Extracting information Chanjo can do some rudimentary metrics from the loaded data. You can start exploring what coverage looks like for the samples. Let's take a look at the mean values for our coverage metrics: $ chanjo calculate mean --pretty So what is this \"completeness\"? Well, it\u2019s pretty simple; the percentage of bases with at least \"sufficient\" (say; 10x) coverage. What's next? The SQL schema has been designed to be a powerful tool on it\u2019s own for studying coverage. It let's you quickly aggregate metrics across multiple samples and can be used as a general coverage API for accompanying tools. One example of such a tool is Chanjo-Report , a coverage report generator for Chanjo output. A report could look something like this.","title":"Demo"},{"location":"topics/demo/#demo","text":"Chanjo comes bundled with a set of demo files that let's you familiarize yourself with the command line interface. This guide assumed you've followed the installation guide .","title":"Demo"},{"location":"topics/demo/#demo-files","text":"First we need some files to work with. Chanjo comes with some pre-installed demo files we can use: $ chanjo init --demo ./chanjo-demo This will create a new folder ( ./chanjo-demo ) in your current working directory and fill it with example files. You can name the new folder anything you like but it must not already exist!","title":"Demo files"},{"location":"topics/demo/#configuration","text":"Chanjo went ahead and pre-filled a config-file for you under: ./chanjo-demo/chanjo.yaml . For now it just references the SQLite database we will use. But since Chanjo will look for this file in the current working directory when you run the command we don't need to reference the database every time. You can optionally point to a config file in a different location by using the --config flag like: chanjo --config /path/to/chanjo.yaml .","title":"Configuration"},{"location":"topics/demo/#linking-exonstranscriptsgenes","text":"Chanjo doesn't subscribe to any particular definition of exons/transcripts etc. You can take a look at the how exons/transcripts/genes are linked in: hgnc.min.bed . Let's tell Chanjo which transcripts belong to which genes. You only need to run this command once. $ cd chanjo-demo $ chanjo link ./hgnc.min.bed","title":"Linking exons/transcripts/genes"},{"location":"topics/demo/#loading-annotations","text":"After running sambamba depth region for a BED-file you can take the output and load it into the database. Let's also add a group identifier to indicate that the sample are related. $ for file in *.coverage.bed; do echo \"${file}\"; chanjo load --group group1 \"${file}\"; done","title":"Loading annotations"},{"location":"topics/demo/#extracting-information","text":"Chanjo can do some rudimentary metrics from the loaded data. You can start exploring what coverage looks like for the samples. Let's take a look at the mean values for our coverage metrics: $ chanjo calculate mean --pretty So what is this \"completeness\"? Well, it\u2019s pretty simple; the percentage of bases with at least \"sufficient\" (say; 10x) coverage.","title":"Extracting information"},{"location":"topics/demo/#whats-next","text":"The SQL schema has been designed to be a powerful tool on it\u2019s own for studying coverage. It let's you quickly aggregate metrics across multiple samples and can be used as a general coverage API for accompanying tools. One example of such a tool is Chanjo-Report , a coverage report generator for Chanjo output. A report could look something like this.","title":"What's next?"},{"location":"topics/developer/","text":"Developer's Guide This document is intended for people interested in contributing to the further development of chanjo. Contributing Currently the best resource on this topic is available at GitHub, in the CONTRIBUTING.md file. Building documentation We use MkDocs for the documentation. To build documentation local install requirements-dev.txt $ pip install -r requirements-dev.txt To build the documentation locally, you just run: $ mkdocs serve ...and open your browser to http://localhost:4000 . License The MIT License (MIT)","title":"Developer's Guide]"},{"location":"topics/developer/#developers-guide","text":"This document is intended for people interested in contributing to the further development of chanjo.","title":"Developer's Guide"},{"location":"topics/developer/#contributing","text":"Currently the best resource on this topic is available at GitHub, in the CONTRIBUTING.md file.","title":"Contributing"},{"location":"topics/developer/#building-documentation","text":"We use MkDocs for the documentation. To build documentation local install requirements-dev.txt $ pip install -r requirements-dev.txt To build the documentation locally, you just run: $ mkdocs serve ...and open your browser to http://localhost:4000 .","title":"Building documentation"},{"location":"topics/developer/#license","text":"The MIT License (MIT)","title":"License"},{"location":"topics/installation/","text":"Installation Guide Chanjo targets Unix and Python 2.7+/3.2+ . It relies on Sambamba for BAM processing, making it very simple to install. Miniconda is still recommended, it\u2019s a slim distribution of Python with a very nice package manager. With Miniconda and conda set up you can do: $ source activate [myEnvironment] $ conda install -c bioconda sambamba $ pip install chanjo Optional dependencies If you plan on using MySQL for your SQL database you also need another SQL-adapter. My recommendation is pymysql . It\u2019s written in pure Python and works on both version 2.x and 3.x. $ pip install pymysql Getting the code Would you like to take part in the development or tweak the code for any other reason? In that case, you should follow these simple steps and download the code from the GitHub repo . $ git clone https://github.com/Clinical-Genomics/chanjo.git $ cd chanjo $ pip install --editable .","title":"Installation"},{"location":"topics/installation/#installation","text":"","title":"Installation"},{"location":"topics/installation/#guide","text":"Chanjo targets Unix and Python 2.7+/3.2+ . It relies on Sambamba for BAM processing, making it very simple to install. Miniconda is still recommended, it\u2019s a slim distribution of Python with a very nice package manager. With Miniconda and conda set up you can do: $ source activate [myEnvironment] $ conda install -c bioconda sambamba $ pip install chanjo","title":"Guide"},{"location":"topics/installation/#optional-dependencies","text":"If you plan on using MySQL for your SQL database you also need another SQL-adapter. My recommendation is pymysql . It\u2019s written in pure Python and works on both version 2.x and 3.x. $ pip install pymysql","title":"Optional dependencies"},{"location":"topics/installation/#getting-the-code","text":"Would you like to take part in the development or tweak the code for any other reason? In that case, you should follow these simple steps and download the code from the GitHub repo . $ git clone https://github.com/Clinical-Genomics/chanjo.git $ cd chanjo $ pip install --editable .","title":"Getting the code"}]}